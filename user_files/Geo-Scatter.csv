""," "
"","\""
"","Tool Base"
"","Bezier Area Base"
"","'"
"","tmp-{}"
"","Draw Curve"
"","Brush Curve"
"","convert stringified matrix back to tuple"
"","get points coord matrix from mod"
"","clear all points of this curve (2 pts need to be left)"
"","get a sum number, aka a way to identify a matrix"
"","check if the given matrix are equal"
"","move graph abscissa back to origin"
"","move graph abscissa left/right by given step value, anchor point with first point"
"","changing points of a graph won't trigger an update, we need to send one manually somehow.."
"","update modifier edit curve with custom preset matrix, note that it"
""," create rando graph"
"","create sinus graph"
"","create stratas (Linear Discretization)"
"","graph from percentage/falloff"
"","graph from min max value"
"","update functions for any preset enum or props"
"","facultative arg only for vg-edit"
"","facultative arg only for psy-fallremap"
"","compose additional instance properties from these given above"
"","private, don"
"","decide if we'll invoke modal or dialog"
"","called when the operator has finished"
"","for modal instance"
"","mandatory function called when user press on 'ok' "
"","pass over all your single layer file and convert them, will try to find the preset automatically"
"","in this function i batch change/add values in json dict"
"","values of the visibility states might be buggy, need a refresh signal"
"","find scatter5 properties that found in emitter animation data"
"","refresh the animated props"
"","will toggle off overlay while in renderede view"
"","update rendered view nodegroup"
"","message bus rendered view check function"
"","ensure that the particle interface is drawn correctly, it has been implemeted in Geo-Scatter 5.4, and there might be some systems that need the interface to be initiated"
"","when saving a .blend, we keep track of a system version. Geo-Scatter use geometry node, and saving in newer blender version will result in forward compatibility issues"
"","wait until bpy.context is not bpy_restrict_state._RestrictContext anymore"
"","when user is interacting with system lists"
"","return a list of handler stored in .blend"
"","default_brush"
"","tool_default"
"","Dot Brush"
"","tool_dot"
"","Pose Brush"
"","tool_pose"
"","Path Brush"
"","tool_path"
"","Chain Brush"
"","tool_chain"
"","Spatter Brush"
"","tool_spatter"
"","Spray Brush"
"","tool_spray"
"","Aligned Spray Brush"
"","tool_spray_aligned"
"","Lasso Fill"
"","tool_lasso_fill"
"","Clone Brush"
"","tool_clone"
"","Eraser Brush"
"","tool_eraser"
"","Dilute Brush"
"","tool_dilute"
"","Relax Brush"
"","tool_smooth"
"","Move Brush"
"","tool_move"
"","Rotation Settings Brush"
"","tool_rotation_set"
"","Random Rotation Brush"
"","tool_random_rotation"
"","Tangent Alignment Brush"
"","tool_comb"
"","Spin Brush"
"","tool_spin"
"","Normal Alignment Brush"
"","tool_z_align"
"","Scale Settings Brush"
"","tool_scale_set"
"","Grow/Shrink Brush"
"","tool_grow_shrink"
"","Object Index Brush"
"","tool_object_set"
"","Drop Down Brush"
"","tool_drop_down"
"","Free Move Brush"
"","tool_free_move"
"","Manipulator"
"","scatter5.manual_brush_tool_manipulator_workspace_tool"
"","tool_manipulator"
"","builtin.select_box"
"","Heaper Brush"
"","tool_heaper"
"","debug 3d"
"","debug errors"
"","builtin.select"
"","Show"
"","Circle Steps"
"","Fixed Radius"
"","Fixed Dot Radius"
"","No Entry Sign Size"
"","No Entry Sign Color"
"","No Entry Sign Thickness"
"","Outline Color"
"","Outline Color Press"
"","Outline Color Eraser"
"","Outline Color Hint"
"","Outline Disabled Alpha"
"","Outline Helper Alpha"
"","Outline Gesture Helper Alpha"
"","Outline Falloff Helper Alpha"
"","Outline Thickness"
"","Outline Helper Thickness"
"","Outline Dashed Steps Multiplier"
"","Fill Color"
"","Fill Color Press"
"","Fill Color Eraser"
"","Fill Color Hint"
"","Fill Disabled Alpha"
"","Fill Helper Alpha"
"","Fill Gesture Helper Alpha"
"","Text Size"
"","Text Color"
"","Tooltip Outline Color"
"","Tooltip Background Color"
"","Tooltip Outline Thickness"
"","Point Size"
"","Overlay Grid Size"
"","Overlay Grid Color A"
"","Overlay Grid Color B"
"","Infobox Scale"
"","Infobox Shadow Color"
"","Infobox Fill Color"
"","Infobox Outline Color"
"","Infobox Outline Thickness"
"","Infobox Logo Color"
"","Infobox Text Header Color"
"","Infobox Text Body Color"
"","Maipulator"
"","Manual Tool Gesture"
"","Gesture"
"","VERTS"
"","Lasso Base"
"","add a new mask + menu"
"","main scattering operator for user in 'Creation>Scatter' "
"","General Remove Function used by almost all mask modules in mask_types"
"","bake ao in scene dupplicata, return ao vcol array"
"","get AO per vertices data"
"","Normalize"
"","return array of tris points from given object"
"","return array of points from given object"
"","Create mesh copy of given curve"
"","create dynamic paint canvas set-up"
"","Scatter5 Dynamic Paint Canvases"
"","create dynamic paint canvas for brush"
"","Scatter5 Dynamic Paint Brush"
"","Geo-Scatter Extra"
"","filter selection"
"","add new objects in the boolean collection and set as boolean brush"
"","change boolean object properties"
"","remove culling distance from information from given weight array"
"","get ray traced from cam info (rays can hit self mesh only)"
"","get ray traced from cam info (rays can hit all scene)"
"","Absolute"
"","create vertex group from particle system location proximity"
"",".Scatter5 VcolToVgroup"
"",".Scatter5 VgroupMerge"
"",".Scatter5 VgroupSplit"
"","Cropping"
"","Smooth"
"","dynamically change category & reload some panel upon update"
"","addon_prefs.blend_environment_paths[x]"
"","addon_prefs = bpy.context.preferences.addons[\"Geo-Scatter\"].preferences"
"","  88"
"","\"Yb 88  Y8 888888 88ood8    88  Y8 dP\""
"","\"Yb 88  Y8 `YbodP' dP\""
"","Use Overlay"
"","codegen for registering popovers args"
"","codegen for registering all ui open/close properties"
"","dummy class used just to create pointers"
"","bpy.context.window_manager.scatter5.ui.popovers_args"
"","scat_ui = bpy.context.window_manager.scatter5.ui, props used for opening/closing gui"
"","scat_object = bpy.context.object.scatter5"
"","generate uuid once on first read"
"","random id between -2.147.483.647 & 2.147.483.647"
"","return the active particle system of this emitter, will return bpy.types.Object or None"
"","return the selected particle systems of this emitter, note that active psy is not considered as selected, will return a list"
"","Geo-Scatter Geonode"
"","Geo-Scatter Surfaces"
"","Geo-Scatter Ins Col"
"","get the group active in the particle_interface_items interface"
"","cleanse unused groups"
"","\"Yb 88  Yb   88   88  YboodP 88ood8 888888     88ood8 88 8bodP'   88       88 88  Y8   88   888888 88  Yb 88     dP\""
"","MyPsy"
"","set interface items, either set by item directly, or set by item_type and item_name"
"","object.scatter5.particle_interface_items will be constantly rebuild on major user interaction"
"","get group tuple from psy tuple"
"","\"Yb 88  Yb 888888     dP\"\"\"\"Yb 88  Yb 888888 dP\""
"","get the mÂ² of this object mesh (mods not evaluated),  carreful, might be slow, do not run in real time"
"","needed to estimate future psy density"
"","\"Yb 88 YY 88 888888 88  Yb dP\""
"","\"Yb 88ood8     88 YY 88 dP\""
"","is needed when dupplicating an object, it will also dupplicate every object properties, coulld be solved more elegantly if blender had real uuid"
"","find back psy from a scatter_obj"
"","uuids = bpy.context.scene.scatter5.uuids[i]"
"","scat_scene = bpy.context.scene.scatter5"
"","return list of all emitters"
"","return a list of all psys"
"","get a psy by it's unique given name"
"","get a psy by it's unique uuid value"
"","mode currently used: DRAW_AREA | MANUAL | PSY_MODAL | FACE_SEL"
"","bpy.data.node_groups[i].scatter5"
"","bpy.context.scene.scatter5.emitter.scatter5.mask_systems"
"","return a list of surface object(s)"
"","add the viewport selection to the list of surfaces"
"","scat_ops = bpy.context.scene.scatter5.operators"
"","update function of p.group, will refresh all group properties accordingly"
"","name"
"","generate the redudant the properies declaration of featuremasks"
"","my_propXX"
"","this fun goal is to generate the redudant the properies declaration"
"","bpy.context.object.scatter5.particle_systems, will be stored on emitter"
"","important for renaming function, avoid name collision"
"","uuid generated in add_psy_virgin, should never be 0, internal purpose"
"","Instance generator object. An object locked on scene origin where we"
"","get 'Geo-Scatter Engine MK..' modifiers latest version from scatter_obj"
"","ready only! auto-updated by `psy.particle_interface_idx` update function `on_particle_interface_interaction()`"
"","Scatter system created with Geo-Scatter or Biome-Reader ?"
"","Scatter version upon with this scatter-system was created"
"","Blender version upon with this scatter-system was created"
"","verify if this psy version is adequate to the current addon version"
"","verify if this psy blender version is adequate to the current version of blender the user is using"
"","we"
"","get group of which this system (self) is a member of, will return None if not part of any groups"
"","check if given keys, can be full propname or just category name, is locked"
"","check if all categories are locked (mainly used to display lock icon in GUI)"
"","lock all property categories"
"","unlock all property categories"
"","check if the psy is being synchronized"
"","get information about what is sync with what"
"","check if the given property category is active"
"","directly run the property update task function (== changing nodetree) w/o changing any property value, and w/o going in the update fct wrapper/dispatcher"
"","refresh this property value"
"","for every settings, make sure nodetree is updated"
"","get count in real time, only for viewport, might be too slow if millions of points, also, will not work for point cloud display"
"","evaluate the psy particle count (will unhide psy if it was hidden) slow! do not in real time"
"","evaluate psy density /mÂ² of this scatter system independently of , will remove masks and optimizations temporarily -- CARREFUL MIGHT BE SLOW -- DO NOT RUN IN REAL TIME"
"","needed for GUI drawing.."
"","gather matching attributes accross all surfaces used"
"","will gather or optionally refresh each obj of the surfaces: object.scatter5.estimated_square_area"
"","s_scale_random"
"","s_scale_shrink"
"","s_scale_grow"
"","s_scale_mirror"
"","Internal property that will update a TEXTURE_NODE node tree from given nodetree name, used for presets and most importantly copy/paste or synchronization"
"","s_rot_random"
"","s_rot_add"
"","s_rot_tilt"
"","s_patternX_allow"
"","s_patternX_texture_ptr"
"","s_patternX_color_sample_method"
"","s_patternX_id_color_ptr"
"","s_patternX_id_color_tolerence"
"","s_patternX_dist_infl_allow"
"","s_patternX_dist_influence"
"","s_patternX_dist_revert"
"","s_patternX_scale_infl_allow"
"","s_patternX_scale_influence"
"","s_patternX_scale_revert"
"","s_pattern1"
"","s_pattern2"
"","s_pattern3"
"","s_abiotic_elev"
"","s_abiotic_slope"
"","s_abiotic_dir"
"","s_abiotic_cur"
"","s_abiotic_border"
"","s_proximity_repel1"
"","s_proximity_repel2"
"","s_proximity_outskirt"
"","return list of local scatter-systems, used for prop_search"
"","s_ecosystem_affinity_XX_ptr"
"","s_ecosystem_affinity_XX_type"
"","s_ecosystem_affinity_XX_max_value"
"","s_ecosystem_affinity_XX_max_falloff"
"","s_ecosystem_affinity_XX_limit_distance"
"","s_ecosystem_affinity"
"","s_ecosystem_repulsion_XX_ptr"
"","s_ecosystem_repulsion_XX_type"
"","s_ecosystem_repulsion_XX_max_value"
"","s_ecosystem_repulsion_XX_max_falloff"
"","s_ecosystem_repulsion"
"","s_push_offset"
"","s_push_dir"
"","s_push_noise"
"","s_push_fall"
"","s_wind_wave"
"","s_wind_noise"
"","get all objects used by this particle instancing method"
"","s_instances_id_XX_rate"
"","s_instances_id_XX_scale_min"
"","s_instances_id_XX_scale_max"
"","s_instances_id_XX_color"
"","bpy.context.object.scatter5.particle_groups, will be stored on emitter"
"","list all psys being members given group"
"","for every settings, make sure nodetrees of psys members are updated"
"","special update name function for renaming a group"
"","open/close the group system"
"","find all classes loaded in our plugin"
"","find all classes who detain blender enum properties in their annotation space"
"","check if this item need to be patched, if the icon element of the item has a patchsignal"
"","patch icon element of an item if needed"
"","update global from  directories module with user custom addon_prefs.library_path"
"","Startup the library directories"
"","install previews with bpy.utils.preview, will try to search for all image file inside given directory"
"","install previews with bpy.utils.preview, will loop over list of image path"
"","remove previews wuth bpy.utils.preview"
"","for debug purpose"
"","unzip given zip file"
"","check if there are .blends in this zip"
"","translate this string"
"","introspect all translate() function, and create traduction dict files, key is always english"
"","Render a preview of this biome/preset for this item in background"
"","emitter_far"
"","Thumbnail"
"","get instance list information from json dict"
"","search for the full path of given basename in the scatter library & environment paths"
"","batch import all related objects of a biome preset file"
"","same as 'add_biome()', with added layer of complexity of progress bar system, and custom behavior settings"
"","\n â¢ "
"","import dependencies objects from biome files, done at once for optimization purpose"
"","import_instruction"
"","Add a new biome layer, (or optionally, assing a material, or execute a script, currently unused)"
"","addlayer_instructions"
"","special instruction for direct mask painting option"
"","quickpaint_instruction"
"","security_instruction"
"","DirectPaint"
"","the scatter Biome Library is by default located in:"
"","You are free to create subfolders within this location."
"","  "
"","rename a biome json/files"
"","return a list of all paths that scatter5 believe are linked with the given biome"
"","     â¢ "
"","default"
"","utility function to define emitter, surfaces, instances, psy name&color quickly"
"","No Name"
"","depending on ctxt_f tweak scatter-system"
"","main scattering operator for user in 'Creation>Scatter' if running this from script, note that there are a few globals parameters that could have an influence over this operation, such as the security features"
"","running add_psy_preset w/o using presets and overriding with own density & default settings"
"","manual"
"","..."
"","vg"
"","surfdefine"
"","bitmap"
"","standard"
"","curve"
"","QScatter"
"","Vgroup"
"","QuickSatterTexture"
"","Window"
"","Dynamically create EnumProperty from custom loaded previews"
"","check if emitter emitter type is mesh"
"","poll fct  for bpy.context.scene.scatter5.emitter prop"
"","on each depsgraph update, check if user has removed the emitter, we need to update the main emitter prop of scene"
"","depsgraph: automatically update emitter pointer to context.object if in pineed mode"
"","depsgraph: clean up emitter objects that have been dupplicated (not instanced)"
"","despgraph: check if no deleted surfaces in f_surfaces"
"","check if emitter is ok for scattering preset or biome"
"","Scatter5 User Col"
"","EmptyEmit"
"","Geo-Scatter"
"","ScatterMerge"
"",".ScatterMerge"
"","return all scatter5 psy that use this collection as s_instances_coll_ptr"
"","check if object compatible to be scattered"
"","return a generator of compatible object"
"","operator only for the insance list context"
"","Coef Calculation"
"","find default value of a property"
"","fix missing/broken/older geonode engine nodegroups and their modifiers"
"","re attach potentially broken scatter-obj to the scatter system settings"
"","scatter_obj : "
"","psy : "
""," dict -> settings "
"","set attr, but check if attr in our dictornary of properties first, by default will return if attr was found, use return_value if you'd like to check and if the prop was a boolean and true"
"","helper funciton for scatter ng texure type, used a bit everywhere below"
"","helper function to assign universal mask properties stored in dict"
""," dict <- settings "
"","helper funciton for scatter ng texture type, used a bit everywhere below"
"","saving masks settings collection in .preset dict, this is an universal mask system, all settings are implemented the same way"
"","external operator, on creation we use bpy.ops.scatter5.add_psy_preset()"
"","only used if alt behavior == automatic selection|active"
"","needed to split the menu in two because passing a text argument to gui menus is incredibly difficult"
"","version for per category header"
"","version for ui list"
"","   "
"","Remove the selected particle system(s)"
"","batch set set all psy selection status"
"","function that run when user set a particle system as active, used for shift&alt shortcut, also change selection"
"","toggle select all"
"","Select/Deselect an object"
"","return list of all potential psys for search"
"","bpy.context.scene.scatter5.sync_channels[i].members"
"","bpy.context.scene.scatter5.sync_channels"
"","check if a psy exists in sync channel members"
"","check if given settings category is being sync"
"","return a list of psy members"
"","add the given psy args as new members"
"","make sure all settings are set to the same values"
"","special creatiion options for presets, quite legacy, now we have mapping seed embedded settings"
"","bpy.data.node_groups[i].scatter5.texture"
"","collect all scatter-systems/group-systems user of this texture data"
"","return a settings dict from a scatter texture nodegroup"
"","apply settings to a scatter texture nodegroup"
"","partially convert legacy texture data information to new texture, scatter5 beta"
"","Projection Space:"
"","draw texture datablock"
"",".S5PatternViz"
"","ScatterVisualizer"
"",".ScatterTextureVisualizer"
"","timer used to add delay when calling operator of the function"
"","if \"LEFTMOUSE PRESS\" loop until no more pressed"
"","update nodegroup dispatch, this function is not meant to be used directly, use factory() instead"
"","sync value to all selected psy when user is pressing alt"
"","sync all settings while updating, settings get synced in the update factory"
"","Avoid Error when setting colors"
"","get node from psy nodetree"
"","set value in psy nodetree from node name, depending on node entry type"
"","mute a color of a node in psy nodetree"
"","mute a node in psy nodetree"
"","link two nodes together in psy nodetree"
"","changing a texture ptr == assigning texture nodetree to a psy texture nodegroup"
"",".TEXTURE *DEFAULT* MKIV"
"","update keword node in psy nodetree"
"","get keyword value from psy node"
"","random psy function of a nodetree, will assign property"
"","get remap graph points matrix from node"
"","set remap graph matrix from matrix str"
"","timer used to add delay until cam has stopped moving"
"","update nodegroup"
"","run uuid update when user is adding/removing objects in collections, run on depsgraph update"
"","set equivalence id from uuid in nodetree, only for multi-surface + manual distribution"
"","update start/end frame nodegroup"
"","ensure values of BoolProperty are in synch with EnumProperty "
"","update fct can either be a generator fct or just a direct update fct"
"","just mark function with tag"
"","code generation, automatize the creation of the update functions for the universal mask system"
"","undo all group features (if a psy is not assigned to any groups anymore)"
"","run update function equivalence from given propname, return True if propname found else False"
"","create a new displace modifier"
"","automatic bpy.ops.mesh.bisect()"
"","write in library a little text file with boolean statement"
"","get statement from text file, if none found, then consider that is open"
"","bpy.context.window_manager.scatter5.library"
"","check if there's some biomes down this path"
"","will map a path folder biome structure with basic information"
"","."
"","Register every previews for each elements of scatter5 manager library"
"","unregister all icons of library"
"","get icon id of given element.icon"
"","check if there's some other nested folder with some biomes in this path (for folder navigation ICON gui)"
"","INVOKE_DEFAULT"
"","Draw user Biome Library"
"","This Folder Seems to be empty!"
"","Draw Online Store"
"","Write all Previews on disk every X Days or if last_fetch_path path not found"
"","drawing dunction of AddonPrefs class, stored in properties"
"","Both licenses can be found on âwww.geoscatter.com/legalâ"
"","This agreement is available on âwww.geoscatter.com/legalâ"
"","Contact Information:"
"","Visit âwww.geoscatter.comâ"
"","Visit âwww.geoscatter.com/legalâ"
"","*Extend this interface if texts are not readable."
"","Impostor Main"
"","Impostor Header"
"","Settings"
"","importor T panel"
"","Monkey patch drawing code of addon preferences to our own code, temporarily"
"","register impostors"
"","restore and find original drawing classes"
"","TODO create .excel sheet, separate it per column into single column file, create enum from single column, make enum then made translate() fct work on restart"
"","Supported Languages:"
"","        -English"
"","        -Spanish"
"","        -French"
"","        -Japanese"
"","        -Chinese (Simplified)"
"","collect keymap item"
"","sel"
"","hide_viewport"
"","hide_render"
"","lock"
"","s_visibility_view_allow"
"","s_visibility_maxload_allow"
"","s_visibility_facepreview_allow"
"","s_visibility_cam_allow"
"","s_display_allow"
"","check if the given path is located in a folder being closed in the gui"
"","get useful props used in interface"
"","draw main creation panel"
"","find particle system name depending on instances and options"
"","find particle system color depending on instances and options"
"","*AUTO*"
"","draw main panels header"
"","modifier"
"","mask lists to set active"
"","Scatter5 Displace img-uv"
"","UV Displace"
"","Scatter5 Displace noise 01"
"","Noise Displace 01"
"","Scatter5 Displace noise 02"
"","Noise Displace 02"
"","draw manual sub panel"
"","Tools Generation -> code sampled \"scripts/modules/bpy/utils.__init__.register_tool()"
"","ERROR: Active Brush is None! how did you do that?"
"","      "
"","unknown: {}"
"","unknown: {}:{}"
"","Sync Everything"
"","Sync Tool Properties"
"","Sync Location Properties"
"","Sync Rotation Properties"
"","Sync Scale Properties"
"","Sync Settings Properties"
"","MyGroup"
"","selection area"
"","popover only used by draw_coll_ptr_prop() "
"","bpy.context.object.scatter5.particle_interface_items, will be stored on emitter"
"","drawing item function for large/small item lists are highly similar"
"","ERROR: Item is None"
"","ERROR: Item source is None"
"","system-list compact size, for N panel & quick list shortcut"
"","system-list full options, for manager interface"
"","layout template to draw a quickfix button operator_id in 'scatter5.fix_nodetrees' or 'scatter5.fix_scatter_obj' depending on context"
"","used in tweaking panel but also in quick lister interface"
"","Debug Interface, Dev Only"
"","emitter.particle_interface_idx"
"","emitter.particle_interface_refresh()"
"","emitter.particle_systems:"
"","emitter.particle_groups:"
"","psy_active info:"
"","special move-set behavior for our group system item"
"","spacing between box panels"
"","spacing at the end of a box panel"
"","draw sub panel opening template, use fct to add own settings"
"","check if interface should be drawn, if nothing created or active"
"","check if category is locked"
"","check if category master allow is off"
"","draw viewport method in visibility and display features"
"","Geo-Scatter User Col"
"","draw collection pointer template, for psy or group"
"","draw context_scene.scatter5 camera update dependencies method"
"","draw the transition control feature, this feature is repeated many times"
"","every universal masks api should have _mask_ptr _mask_reverse"
"","draw the feature influence api"
"","draw main tweaking panel"
"","ScatterSurfaces"
"","*"
"","/"
"","+"
"","-"
"","Boolean-Objects"
"","Upward-Objects"
"","X"
"","Y"
"","Z"
"","Object-Repel"
"","OcclusionColl"
"","instance area"
"","Instancing Objects"
"","Error, this group is empty"
"","s_gr_pattern1_texture_ptr"
"","s_gr_pattern1"
"","Density"
"","Collision"
"","Read Only"
"","Paint"
"","Seed"
"","Randomize"
"","Scale"
"","Random"
"","Align"
"","Normal"
"","Local Z"
"","Pattern"
"","New"
"","s_pattern1_texture_ptr"
"","BR-Pattern"
"","Active"
"","Brightness"
"","Contrast"
"","exclude a collection from all view layers f all scenes"
"","unlink all obj from a collection"
"","Get viewlayer from collection name."
"","Set collection active by name, return False if failed."
"","close level on all outliner viewlayer area"
"","Create new collection and link in given parent (if not None)."
"","Create scatter collection set-up for this scene"
"","Name"
"","create e new texture data, type in [IMAGE,CLOUDS,NOISE,WOOD]"
"","get the four bounding box top points"
"","create quad from four points"
"","create single point object"
"","subdivide o"
"","sub"
"","create subdivided plane, (gross bpy.ops)"
"","lock object transforms"
"","Hello World"
"","popup_menu"
"","scroll view2d to top using scroll_up() operator multiple times in a row"
"","tag redraw all context window area"
"","Will invoke a dialog box -> need to run in (\"INVOKE_DEFAULT\")"
"","empty event class, only use by singleton"
"","update event singleton, this is an internal operator"
"","get rebuilt Event type via bpy.types.Operator invoke()"
"","debug print"
"","timer decorator"
"","return generator of all 3d view space"
"","return generator of all shading type str"
"","check if is rendered view in a 3d view somewhere"
"","useful for some cases where we don't want to register an undo when we toggle a bool property"
"","dummy place holder"
"","quickly execute simple line of code, witouth needing to create a new operator"
"","store surfaces target"
"","ImageMask"
"","import geonode(s) from given blend_path"
"","import obj(s) from given blend_path"
"","export obj in a new .blend"
"","workaround, use an operrator context override to get correct cotext. areas[x].selected_asset_files just refuses to work"
"","gather asset browset items from operator context"
"","import selected object type assets from browser, link/append depends on technique"
"","import materials by name into blender data"
"","import images in bpy.data.images"
"","convert unknown blendertypes"
"","temporarily hide/restore all modstack viewport options for perfs, otherwise python evaluate whole blender scene at each line of code"
"","check modifier order (compare index)"
"","get index of mod"
"","order the modstack by names, filter by type option"
"","remap values to given minimal and maximal"
"","local to global numpy coordinates"
"","local co to local obj"
"","support for selection/active & also mode, i don't think that classic override support mode?"
"","naive serialization attempt on bpy types, we might need to implement new types later"
""," dict > .json, will write json to disk"
"",".json -> dict"
"","get all directories paths within given path"
"","get all files paths within given path"
"","get all existing files paths within the given folder"
"","get parent folder from given depth"
"","get list of folders at given depths"
"","search by overviewing all folders and checking if file exists at these locations, faster method?"
"","check if string has illegal char"
"","make string legal"
"","find suffix with name that do not exists yet"
"","return a correct string with suffix to avoid doubles"
"","word wrap a piece of string"
"","word wrap function"
"","return float value with rounding appropriate depending on decimal value"
"","stringify squarearea to cmÂ²/mÂ²/ha/kmÂ²"
"","get string version of scatter count"
"","versioning is very dumb in this plugin, it sometimes use string format, sometimes blender use a list format ect.. ultimately in order to "
"","get weight dict"
"","fill vg from given values (can be int,float,list,np array,dict)"
"","create or refresh vg with given value(s) if not None"
"","create or refresh vcol with given value if not None"
"","Set vg active if exist"
"","reverse vg with ops.vertex_group_invert()"
"","expand given weight"
"","Vcol"
"","if create new data, user need to confirm name in dialog box"
"","return list of attributes, vgs or vcols, depending on chosen mode"
"","dispatch between create new or enter painting"
"","add vg edit, == map curve graph for vg, OPERATOR FOR PROCEDURAL MASK VG ONLY"
"",".S5FacePreview"
"","append an instance of the infobox"
"","write selection into vertex color layers for each surfaces"
"","called when quitting the modal"
"","pcv_debug"
"","InfoBox Test Operator"